<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClearHistory.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAABGdBTUEAALGPC/xhBQAAA/VJREFUeF7t
        m91x1EAQhB0CIahO+I5HP1IUZ5wBzgCHQAZ2BpABzsBkYIdABpABzsBMq7RmUI32T6uVhPur6jInrVZm
        WjOz0sknhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQsiCvRB96fRJdiz72nxsRqQAC/k30U/QU0G/R
        nQhmwTzi4VL0RXTWffKDqx0mWEFPEeZg5hhciFyQcBWPmYKrGqbpoJYQsoYZo7gR6QBZpiCDsF2PKynM
        fSUiwtAQFyBnCprzcP9cQhl78ViGQDDlfrCthrZRwo779vJ8v7se0/HQYMWTw5ghufoheuiFf1tjQoIp
        60XMuD0/tE8hHfe7nJSfasgvEebwrdCw76sIY605LK2zfB1P2ysr+GPC+P7QWHINQXBzGjGOiTVmfY3+
        eGgfumDvd48XTWPWVmzH/s6QQ4u6n0KOIbeiqWAOa24t9LH19JN3p83Z36t/h5QfBfvd2LdvmpQbrlRD
        vL9HIsgA6xxadftJf3WPNOr23gUZ/cEa49Ttd2NxnDEGMrIs1RC9JC5BjCn17ujfv24uXCBrCOfrT+3I
        KVkxpuDKdmNxY+kjVL5KlMg4/i1L8wvn60/tyG3qIVP0WJwjRKjR1+8lzw28sDBvfwqLXEMgnyl6XIwh
        odJVf8W1QUOgsWDHjBniy5LvorpYhshN4Xdpxjfdz8Rtz/v8hqBhWgGI1Vh/0GNiDcEKTh+nhWysi2WI
        a8K6+cducwoYAmAKgpaq4QJBo4OJsTGg/Onjhqr7/cmChsyBDmSsIUAfN5TvAigPDenw9REaMgEdyBRD
        8LvqY7VS5pkODemgIRNAk3Wv/gyVG0jfGyzd/7EaGzMkZbmcYoh1vBMN8YDzWUGzFGsIl70TmCNDfDeG
        j6K6bMwQgCsa5w0p9sGgr3+s49FJbPCtbU4zGlKSbTxcjA2+tc1pI4aE3g9ex+P32OBb25wKGIIHiKEv
        maYQele43hdUmpUaokvJHGUjVKqguqsrh2XIcd/e4bvw7mfitud9+YZYwSppSowZy2QHsAwpoUxDfMHC
        W/BTa3qoTEFY6tbvHQ79Kk9Z+V8hMkC/sAKkhSac01fwBzsxf+ADlczGdKz6X0KuvySAGzkrQJYQ3NAf
        +2AfxsQaAS1XqjTSA6Le440V5uunTgVlzgpUSAg63p6EUgzQWocZji5T9rubqcrIDA1qd64pUwQzlusb
        GwABsgI3h9aVGSvmswgrHiuIJYS5l23gGwQ3Z3NkC0vURNCXShiDOZa5A/9PwVWNMoPH4jHlDGMwFscw
        IyqAqx3ZA+E+BnKfmQmEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhLx4Tk7+AMf7h/B1+nReAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>